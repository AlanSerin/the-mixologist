{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","callfunction","toggleList","searchRandom","useState","searchType","changeSearchType","text","changeText","pltext","className","Navbar","bg","expand","Brand","href","onClick","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","Form","onSubmit","e","preventDefault","inline","FormControl","onChange","target","value","type","placeholder","Button","variant","NameBody","name","image","ingredients","instructions","Row","Col","xs","md","Image","src","rounded","map","ingredient","index","instruction","ListBody","list","details","prop","sm","lg","Card","style","width","Img","strDrinkThumb","Body","Title","strDrink","Text","idDrink","App","showList","changeShowList","changeName","changeImage","changeIngredients","changeInstructions","drinklist","changeDrinklist","React","useEffect","getRandom","console","log","fetch","then","response","json","jsonData","assignData","catch","error","assignList","y","drinks","length","i","push","strInstructions","split","ing","includes","glasstype","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1549c732.chunk.js","sourcesContent":["import { Navbar,Nav,NavDropdown,Form,FormControl,Button,Card,Image,Container,Row,Col  } from 'react-bootstrap';\nimport './App.css';\nimport React , { useState, Component } from 'react';\n\nconst Header = ({callfunction,toggleList,searchRandom}) =>{\n\n  const enterController = (e) => {\n    e.preventDefault();\n  }\n\n \n  const [searchType,changeSearchType] = useState(\"name\");\n  const [text,changeText] = useState(\"name\");\n  let pltext = `Search by ${searchType}`;\n\n  const startSearch = () => {\n    console.log(\"anan\");\n  }\n\n  return(\n    <div className=\"navbardiv\">\n      <Navbar bg=\"none\" expand=\"lg\">\n        <Navbar.Brand className=\"Appname\" href=\"\" onClick = {toggleList}>The Mixologist</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link onClick ={searchRandom}>Surprise me</Nav.Link>\n            <NavDropdown title=\"Search option\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item onClick={() => changeSearchType(\"name\")}>Search by name</NavDropdown.Item>\n              <NavDropdown.Item onClick={() => changeSearchType(\"ingredient\")}>Search by ingredient</NavDropdown.Item>\n              <NavDropdown.Item onClick={() => changeSearchType(\"glass\")}>Search by glass</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Search non-alcoholic drinks</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Form onSubmit={enterController} inline>\n            <FormControl onChange={(e)=> {changeText(e.target.value)}} type=\"text\" placeholder= {pltext} className=\"mr-sm-2\" />\n            <Button onClick={() => callfunction(text,searchType)} variant=\"outline-info\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nconst NameBody = ({name,image,ingredients,instructions}) => {\n  \n\n  //getData();\n\n  return (\n    <div className=\"vertical-center\">\n        <Row>\n          <Col xs={12} md={6}>\n            <Image className=\"w-75\" src={image} rounded />\n          </Col>\n          <Col xs={12} md={6}>\n            <Row className = \"justify-content-start\">\n              <h1 className= \"drinktitle\">{name}</h1>\n            </Row>\n            <Row className = \"justify-content-end\">\n              <h3 className=\"cocktail\">Cocktail</h3>\n            </Row>\n            <hr></hr>\n            <Row className=\"topmargin\">\n              <Col xs={12} md={6}>\n                <h3>Ingredients</h3>\n                <div className=\"mt-4\" variant = \"flush\">{ingredients.map((ingredient,index) => <p key={index} >{ingredient}</p>)}</div>\n              </Col>\n              <Col xs={12} md={6}>\n                <h3>Instructions</h3>\n                <div className=\"mt-4\" variant = \"flush\">{instructions.map((instruction,index) => {\n                  if(index > 7)\n                    return null\n                  else {\n                    return <p key={index} >{instruction}</p>\n                  }\n                })}</div>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n    </div>\n  );\n}\n\nconst ListBody = ({list,details}) => {\n  return(\n    <div className=\"listbody my-5\">\n        <Row> \n            {list.map((prop,index) => {\n             return (\n              <Col key={index} xs={12} sm={6} md={4} lg={3}>\n                <Card className=\"mb-5\" style={{ width: '20rem' }}>\n                  <Card.Img variant=\"top\" src={prop.strDrinkThumb} />\n                  <Card.Body>\n                    <Card.Title className=\"cardTitle\">{prop.strDrink}</Card.Title>\n                    <Card.Text>\n                      Some quick example text to build on the card title and make up the bulk of\n                      the card's content.\n                    </Card.Text>\n                    <p className=\"recipebutton\" variant=\"link\" onClick = {() => details(prop.idDrink)}>See recipe</p>\n                  </Card.Body>\n                </Card>\n              </Col>\n             );\n            })}\n        </Row>\n    </div>\n  );\n}\n\nfunction App() {\n\n  const[showList,changeShowList] = useState(false);\n  const [search,changeSearch] = useState();\n  const [name,changeName] = useState();\n  const [image,changeImage] = useState();\n  const [ingredients,changeIngredients] = useState([]);\n  const [instructions,changeInstructions] = useState([]);\n  const [drinklist,changeDrinklist] = useState([]);\n\n  React.useEffect(() => {\n    getRandom();\n  }, []);\n  \n  const getRandom = () => {\n    console.log(\"random\");\n    fetch(\"https://www.thecocktaildb.com/api/json/v1/1/random.php\")\n    .then(response => response.json())\n    .then((jsonData) => {\n      // jsonData is parsed json object received from url\n      console.log(jsonData);\n      assignData(jsonData);\n    })\n    .catch((error) => {\n      // handle your errors here\n      console.error(error)\n    })\n    changeShowList(false);\n  }\n\n  const fetchIDData = (id) => {\n    fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`)\n      .then(response => response.json())\n      .then((jsonData) => {\n        // jsonData is parsed json object received from url\n        console.log(jsonData);\n        console.log(id);\n        assignData(jsonData);\n      })\n      .catch((error) => {\n        // handle your errors here\n        console.error(error)\n      })\n  }\n\n\n  const getData = (text,type) => {\n    console.log(\"asdasdasdasdasd\");\n    console.log(text,type);\n    if(type == \"name\"){\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${text}`)\n      .then(response => response.json())\n      .then((jsonData) => {\n        // jsonData is parsed json object received from url\n        console.log(jsonData);\n        assignData(jsonData);\n      })\n      .catch((error) => {\n        // handle your errors here\n        console.error(error)\n      })\n    }\n    else if (type == \"ingredient\"){\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${text}`)\n      .then(response => response.json())\n      .then((jsonData) => {\n        // jsonData is parsed json object received from url\n        console.log(jsonData);\n        assignList(jsonData);\n      })\n      .catch((error) => {\n        // handle your errors here\n        console.error(error)\n      })\n    }\n    else{\n      let glasstype = \"\"; \n      switch(text){\n        case \"champagne\" : glasstype = \"flute\"; break;\n        case \"brandy\" : glasstype = \"snifter\"; break; \n        case \"coffee\" : glasstype = \"mug\";break;\n        default : glasstype = \"glass\";\n      }\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?g=${text}_${glasstype}`)\n      .then(response => response.json())\n      .then((jsonData) => {\n        // jsonData is parsed json object received from url\n        console.log(jsonData);\n        assignList(jsonData);\n      })\n      .catch((error) => {\n        // handle your errors here\n        console.error(error)\n      })\n    }\n  }\n\n  const assignList = (jsonData) => {\n    console.log(drinklist);\n    let y = [];\n    if(jsonData.drinks.length > 20){\n      for(var i= 0; i < 20; i++){\n        y.push(jsonData.drinks[i])\n        console.log(y);\n      }\n    }\n    else{\n      for(var i= 0; i < jsonData.drinks.length; i++){\n        y.push(jsonData.drinks[i])\n        console.log(y);\n      }\n    }\n    changeDrinklist(y);\n    console.log(drinklist);\n    console.log(y);\n    changeShowList(true);\n  }\n\n  const assignData = (jsonData) => {\n    changeName(jsonData.drinks[0].strDrink);\n    changeImage(jsonData.drinks[0].strDrinkThumb);\n    changeInstructions(jsonData.drinks[0].strInstructions.split(\".\"));\n    console.log(image);\n    let y = [];\n    for(var ing in jsonData.drinks[0]){\n      if(ing.includes(\"strIngredient\")){\n        if(jsonData.drinks[0][ing] != null){\n          console.log(jsonData.drinks[0][ing]);\n          y.push(jsonData.drinks[0][ing]);\n        }\n      }\n    }\n    changeIngredients(y);\n    changeShowList(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header searchRandom = {() => getRandom()} toggleList = {() => changeShowList(false)} callfunction={getData} />\n      {showList === false ?<NameBody \n        name = {name}\n        image = {image}\n        ingredients = {ingredients}\n        instructions = {instructions}\n        /> : <ListBody details = {fetchIDData} list= {drinklist}></ListBody> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}