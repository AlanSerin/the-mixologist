{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","callfunction","toggleList","searchRandom","useState","searchType","changeSearchType","text","changeText","pltext","className","Navbar","bg","expand","Brand","href","onClick","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","Form","onSubmit","e","preventDefault","inline","FormControl","onChange","target","value","type","placeholder","Button","variant","NameBody","name","image","ingredients","instructions","Row","Col","xs","md","Image","src","rounded","map","ingredient","index","instruction","ListBody","list","details","Container","fluid","prop","sm","lg","Card","style","width","Img","strDrinkThumb","Body","Title","strDrink","Text","idDrink","App","showList","changeShowList","changeName","changeImage","changeIngredients","changeInstructions","drinklist","changeDrinklist","React","useEffect","getRandom","console","log","fetch","then","response","json","jsonData","assignData","catch","error","assignList","y","drinks","length","i","push","strInstructions","split","ing","includes","glasstype","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAIMA,EAAS,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,aAAaC,EAA4B,EAA5BA,WAAWC,EAAiB,EAAjBA,aAAiB,EAOlBC,mBAAS,QAPS,mBAOjDC,EAPiD,KAOtCC,EAPsC,OAQ9BF,mBAAS,QARqB,mBAQjDG,EARiD,KAQ5CC,EAR4C,KASpDC,EAAM,oBAAgBJ,GAM1B,OACE,qBAAKK,UAAU,YAAf,SACE,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,KAAzB,UACE,cAACF,EAAA,EAAOG,MAAR,CAAcJ,UAAU,UAAUK,KAAK,GAAGC,QAAWd,EAArD,4BACA,cAACS,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,eAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,mBAApB,UACE,eAACC,EAAA,EAAD,CAAKX,UAAU,UAAf,UACE,cAACW,EAAA,EAAIC,KAAL,CAAUN,QAAUb,EAApB,yBACA,eAACoB,EAAA,EAAD,CAAaC,MAAM,gBAAgBJ,GAAG,qBAAtC,UACE,cAACG,EAAA,EAAYE,KAAb,CAAkBT,QAAS,kBAAMV,EAAiB,SAAlD,4BACA,cAACiB,EAAA,EAAYE,KAAb,CAAkBT,QAAS,kBAAMV,EAAiB,eAAlD,kCACA,cAACiB,EAAA,EAAYE,KAAb,CAAkBT,QAAS,kBAAMV,EAAiB,UAAlD,6BACA,cAACiB,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYE,KAAb,CAAkBV,KAAK,cAAvB,+CAGJ,eAACY,EAAA,EAAD,CAAMC,SA7BU,SAACC,GACvBA,EAAEC,kBA4BqCC,QAAM,EAAvC,UACE,cAACC,EAAA,EAAD,CAAaC,SAAU,SAACJ,GAAMrB,EAAWqB,EAAEK,OAAOC,QAASC,KAAK,OAAOC,YAAc5B,EAAQC,UAAU,YACvG,cAAC4B,EAAA,EAAD,CAAQtB,QAAS,kBAAMf,EAAaM,EAAKF,IAAakC,QAAQ,eAA9D,gCAQNC,EAAW,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,KAAKC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aAKxC,OACE,qBAAKlC,UAAU,kBAAf,SACI,eAACmC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,cAACC,EAAA,EAAD,CAAOvC,UAAU,OAAOwC,IAAKR,EAAOS,SAAO,MAE7C,eAACL,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,UACE,cAACH,EAAA,EAAD,CAAKnC,UAAY,wBAAjB,SACE,oBAAIA,UAAW,aAAf,SAA6B+B,MAE/B,cAACI,EAAA,EAAD,CAAKnC,UAAY,sBAAjB,SACE,oBAAIA,UAAU,WAAd,wBAEF,uBACA,eAACmC,EAAA,EAAD,CAAKnC,UAAU,YAAf,UACE,eAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,UACE,6CACA,qBAAKtC,UAAU,OAAO6B,QAAU,QAAhC,SAAyCI,EAAYS,KAAI,SAACC,EAAWC,GAAZ,OAAsB,4BAAiBD,GAATC,WAEzF,eAACR,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,UACE,8CACA,qBAAKtC,UAAU,OAAO6B,QAAU,QAAhC,SAAyCK,EAAaQ,KAAI,SAACG,EAAYD,GACrE,OAAGA,EAAQ,EACF,KAEA,4BAAiBC,GAATD,uBAW7BE,EAAW,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,QACtB,OACE,qBAAKhD,UAAU,gBAAf,SACE,cAACiD,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACf,EAAA,EAAD,UACKY,EAAKL,KAAI,SAACS,EAAKP,GACf,OACC,cAACR,EAAA,EAAD,CAAiBC,GAAI,GAAIe,GAAI,EAAGd,GAAI,EAAGe,GAAI,EAA3C,SACE,eAACC,EAAA,EAAD,CAAMtD,UAAU,OAAOuD,MAAO,CAAEC,MAAO,SAAvC,UACE,cAACF,EAAA,EAAKG,IAAN,CAAU5B,QAAQ,MAAMW,IAAKW,EAAKO,gBAClC,eAACJ,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,CAAY5D,UAAU,YAAtB,SAAmCmD,EAAKU,WACxC,cAACP,EAAA,EAAKQ,KAAN,6GAIA,mBAAG9D,UAAU,eAAe6B,QAAQ,OAAOvB,QAAW,kBAAM0C,EAAQG,EAAKY,UAAzE,+BATInB,aA0KToB,MArJf,WAAgB,IAAD,EAEoBtE,oBAAS,GAF7B,mBAEPuE,EAFO,KAEEC,EAFF,OAGiBxE,qBAHjB,gCAIaA,sBAJb,mBAINqC,EAJM,KAIDoC,EAJC,OAKezE,qBALf,mBAKNsC,EALM,KAKAoC,EALA,OAM2B1E,mBAAS,IANpC,mBAMNuC,EANM,KAMMoC,EANN,OAO6B3E,mBAAS,IAPtC,mBAONwC,EAPM,KAOOoC,EAPP,OAQuB5E,mBAAS,IARhC,mBAQN6E,EARM,KAQIC,EARJ,KAUbC,IAAMC,WAAU,WACdC,MACC,IAEH,IAAMA,EAAY,WAChBC,QAAQC,IAAI,UACZC,MAAM,0DACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GAELN,QAAQC,IAAIK,GACZC,EAAWD,MAEZE,OAAM,SAACC,GAENT,QAAQS,MAAMA,MAEhBnB,GAAe,IAsEXoB,EAAa,SAACJ,GAClBN,QAAQC,IAAIN,GACZ,IAAIgB,EAAI,GACR,GAAGL,EAASM,OAAOC,OAAS,GAC1B,IAAI,IAAIC,EAAG,EAAGA,EAAI,GAAIA,IACpBH,EAAEI,KAAKT,EAASM,OAAOE,IACvBd,QAAQC,IAAIU,QAId,IAAQG,EAAG,EAAGA,EAAIR,EAASM,OAAOC,OAAQC,IACxCH,EAAEI,KAAKT,EAASM,OAAOE,IACvBd,QAAQC,IAAIU,GAGhBf,EAAgBe,GAChBX,QAAQC,IAAIN,GACZK,QAAQC,IAAIU,GACZrB,GAAe,IAGXiB,EAAa,SAACD,GAClBf,EAAWe,EAASM,OAAO,GAAG3B,UAC9BO,EAAYc,EAASM,OAAO,GAAG9B,eAC/BY,EAAmBY,EAASM,OAAO,GAAGI,gBAAgBC,MAAM,MAC5DjB,QAAQC,IAAI7C,GACZ,IAAIuD,EAAI,GACR,IAAI,IAAIO,KAAOZ,EAASM,OAAO,GAC1BM,EAAIC,SAAS,kBACgB,MAA3Bb,EAASM,OAAO,GAAGM,KACpBlB,QAAQC,IAAIK,EAASM,OAAO,GAAGM,IAC/BP,EAAEI,KAAKT,EAASM,OAAO,GAAGM,KAIhCzB,EAAkBkB,GAClBrB,GAAe,IAGjB,OACE,sBAAKlE,UAAU,MAAf,UACE,cAAC,EAAD,CAAQP,aAAgB,kBAAMkF,KAAanF,WAAc,kBAAM0E,GAAe,IAAQ3E,aA5F1E,SAACM,EAAK6B,GAGpB,GAFAkD,QAAQC,IAAI,mBACZD,QAAQC,IAAIhF,EAAK6B,GACN,QAARA,EACDoD,MAAM,4DAAD,OAA6DjF,IACjEkF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GAELN,QAAQC,IAAIK,GACZC,EAAWD,MAEZE,OAAM,SAACC,GAENT,QAAQS,MAAMA,WAGb,GAAY,cAAR3D,EACPoD,MAAM,4DAAD,OAA6DjF,IACjEkF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GAELN,QAAQC,IAAIK,GACZI,EAAWJ,MAEZE,OAAM,SAACC,GAENT,QAAQS,MAAMA,UAGd,CACF,IAAIW,EAAY,GAChB,OAAOnG,GACL,IAAK,YAAcmG,EAAY,QAAS,MACxC,IAAK,SAAWA,EAAY,UAAW,MACvC,IAAK,SAAWA,EAAY,MAAM,MAClC,QAAUA,EAAY,QAExBlB,MAAM,4DAAD,OAA6DjF,EAA7D,YAAqEmG,IACzEjB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GAELN,QAAQC,IAAIK,GACZI,EAAWJ,MAEZE,OAAM,SAACC,GAENT,QAAQS,MAAMA,WA+CF,IAAbpB,EAAoB,cAAC,EAAD,CACnBlC,KAAQA,EACRC,MAASA,EACTC,YAAeA,EACfC,aAAgBA,IACX,cAAC,EAAD,CAAUc,QAlHD,SAACtC,GACnBoE,MAAM,4DAAD,OAA6DpE,IAC/DqE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GAELN,QAAQC,IAAIK,GACZN,QAAQC,IAAInE,GACZyE,EAAWD,MAEZE,OAAM,SAACC,GAENT,QAAQS,MAAMA,OAuGyBtC,KAAOwB,QCtPvC0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1d7ebdde.chunk.js","sourcesContent":["import { Navbar,Nav,NavDropdown,Form,FormControl,Button,Card,Image,Container,Row,Col  } from 'react-bootstrap';\r\nimport './App.css';\r\nimport React , { useState, Component } from 'react';\r\n\r\nconst Header = ({callfunction,toggleList,searchRandom}) =>{\r\n\r\n  const enterController = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n \r\n  const [searchType,changeSearchType] = useState(\"name\");\r\n  const [text,changeText] = useState(\"name\");\r\n  let pltext = `Search by ${searchType}`;\r\n\r\n  const startSearch = () => {\r\n    console.log(\"anan\");\r\n  }\r\n\r\n  return(\r\n    <div className=\"navbardiv\">\r\n      <Navbar bg=\"none\" expand=\"lg\">\r\n        <Navbar.Brand className=\"Appname\" href=\"\" onClick = {toggleList}>The Mixologist</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link onClick ={searchRandom}>Surprise me</Nav.Link>\r\n            <NavDropdown title=\"Search option\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item onClick={() => changeSearchType(\"name\")}>Search by name</NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => changeSearchType(\"ingredient\")}>Search by ingredient</NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => changeSearchType(\"glass\")}>Search by glass</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">Search non-alcoholic drinks</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n          <Form onSubmit={enterController} inline>\r\n            <FormControl onChange={(e)=> {changeText(e.target.value)}} type=\"text\" placeholder= {pltext} className=\"mr-sm-2\" />\r\n            <Button onClick={() => callfunction(text,searchType)} variant=\"outline-info\">Search</Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NameBody = ({name,image,ingredients,instructions}) => {\r\n  \r\n\r\n  //getData();\r\n\r\n  return (\r\n    <div className=\"vertical-center\">\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <Image className=\"w-75\" src={image} rounded />\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <Row className = \"justify-content-start\">\r\n              <h1 className= \"drinktitle\">{name}</h1>\r\n            </Row>\r\n            <Row className = \"justify-content-end\">\r\n              <h3 className=\"cocktail\">Cocktail</h3>\r\n            </Row>\r\n            <hr></hr>\r\n            <Row className=\"topmargin\">\r\n              <Col xs={12} md={6}>\r\n                <h3>Ingredients</h3>\r\n                <div className=\"mt-4\" variant = \"flush\">{ingredients.map((ingredient,index) => <p key={index} >{ingredient}</p>)}</div>\r\n              </Col>\r\n              <Col xs={12} md={6}>\r\n                <h3>Instructions</h3>\r\n                <div className=\"mt-4\" variant = \"flush\">{instructions.map((instruction,index) => {\r\n                  if(index > 7)\r\n                    return null\r\n                  else {\r\n                    return <p key={index} >{instruction}</p>\r\n                  }\r\n                })}</div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ListBody = ({list,details}) => {\r\n  return(\r\n    <div className=\"listbody my-5\">\r\n      <Container fluid>\r\n        <Row> \r\n            {list.map((prop,index) => {\r\n             return (\r\n              <Col key={index} xs={12} sm={6} md={4} lg={3}>\r\n                <Card className=\"mb-5\" style={{ width: '18rem' }}>\r\n                  <Card.Img variant=\"top\" src={prop.strDrinkThumb} />\r\n                  <Card.Body>\r\n                    <Card.Title className=\"cardTitle\">{prop.strDrink}</Card.Title>\r\n                    <Card.Text>\r\n                      Some quick example text to build on the card title and make up the bulk of\r\n                      the card's content.\r\n                    </Card.Text>\r\n                    <p className=\"recipebutton\" variant=\"link\" onClick = {() => details(prop.idDrink)}>See recipe</p>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n             );\r\n            })}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n\r\n  const[showList,changeShowList] = useState(false);\r\n  const [search,changeSearch] = useState();\r\n  const [name,changeName] = useState();\r\n  const [image,changeImage] = useState();\r\n  const [ingredients,changeIngredients] = useState([]);\r\n  const [instructions,changeInstructions] = useState([]);\r\n  const [drinklist,changeDrinklist] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    getRandom();\r\n  }, []);\r\n  \r\n  const getRandom = () => {\r\n    console.log(\"random\");\r\n    fetch(\"https://www.thecocktaildb.com/api/json/v1/1/random.php\")\r\n    .then(response => response.json())\r\n    .then((jsonData) => {\r\n      // jsonData is parsed json object received from url\r\n      console.log(jsonData);\r\n      assignData(jsonData);\r\n    })\r\n    .catch((error) => {\r\n      // handle your errors here\r\n      console.error(error)\r\n    })\r\n    changeShowList(false);\r\n  }\r\n\r\n  const fetchIDData = (id) => {\r\n    fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`)\r\n      .then(response => response.json())\r\n      .then((jsonData) => {\r\n        // jsonData is parsed json object received from url\r\n        console.log(jsonData);\r\n        console.log(id);\r\n        assignData(jsonData);\r\n      })\r\n      .catch((error) => {\r\n        // handle your errors here\r\n        console.error(error)\r\n      })\r\n  }\r\n\r\n\r\n  const getData = (text,type) => {\r\n    console.log(\"asdasdasdasdasd\");\r\n    console.log(text,type);\r\n    if(type == \"name\"){\r\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${text}`)\r\n      .then(response => response.json())\r\n      .then((jsonData) => {\r\n        // jsonData is parsed json object received from url\r\n        console.log(jsonData);\r\n        assignData(jsonData);\r\n      })\r\n      .catch((error) => {\r\n        // handle your errors here\r\n        console.error(error)\r\n      })\r\n    }\r\n    else if (type == \"ingredient\"){\r\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${text}`)\r\n      .then(response => response.json())\r\n      .then((jsonData) => {\r\n        // jsonData is parsed json object received from url\r\n        console.log(jsonData);\r\n        assignList(jsonData);\r\n      })\r\n      .catch((error) => {\r\n        // handle your errors here\r\n        console.error(error)\r\n      })\r\n    }\r\n    else{\r\n      let glasstype = \"\"; \r\n      switch(text){\r\n        case \"champagne\" : glasstype = \"flute\"; break;\r\n        case \"brandy\" : glasstype = \"snifter\"; break; \r\n        case \"coffee\" : glasstype = \"mug\";break;\r\n        default : glasstype = \"glass\";\r\n      }\r\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?g=${text}_${glasstype}`)\r\n      .then(response => response.json())\r\n      .then((jsonData) => {\r\n        // jsonData is parsed json object received from url\r\n        console.log(jsonData);\r\n        assignList(jsonData);\r\n      })\r\n      .catch((error) => {\r\n        // handle your errors here\r\n        console.error(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  const assignList = (jsonData) => {\r\n    console.log(drinklist);\r\n    let y = [];\r\n    if(jsonData.drinks.length > 20){\r\n      for(var i= 0; i < 20; i++){\r\n        y.push(jsonData.drinks[i])\r\n        console.log(y);\r\n      }\r\n    }\r\n    else{\r\n      for(var i= 0; i < jsonData.drinks.length; i++){\r\n        y.push(jsonData.drinks[i])\r\n        console.log(y);\r\n      }\r\n    }\r\n    changeDrinklist(y);\r\n    console.log(drinklist);\r\n    console.log(y);\r\n    changeShowList(true);\r\n  }\r\n\r\n  const assignData = (jsonData) => {\r\n    changeName(jsonData.drinks[0].strDrink);\r\n    changeImage(jsonData.drinks[0].strDrinkThumb);\r\n    changeInstructions(jsonData.drinks[0].strInstructions.split(\".\"));\r\n    console.log(image);\r\n    let y = [];\r\n    for(var ing in jsonData.drinks[0]){\r\n      if(ing.includes(\"strIngredient\")){\r\n        if(jsonData.drinks[0][ing] != null){\r\n          console.log(jsonData.drinks[0][ing]);\r\n          y.push(jsonData.drinks[0][ing]);\r\n        }\r\n      }\r\n    }\r\n    changeIngredients(y);\r\n    changeShowList(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header searchRandom = {() => getRandom()} toggleList = {() => changeShowList(false)} callfunction={getData} />\r\n      {showList === false ?<NameBody \r\n        name = {name}\r\n        image = {image}\r\n        ingredients = {ingredients}\r\n        instructions = {instructions}\r\n        /> : <ListBody details = {fetchIDData} list= {drinklist}></ListBody> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}